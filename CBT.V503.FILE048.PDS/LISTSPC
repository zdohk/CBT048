*          DATA SET CBT501     AT LEVEL 001 AS OF 11/03/87
*          DATA SET CBT501     AT LEVEL 002 AS OF 12/16/75              00001
         TITLE 'LISTSPC - DOCUMENTATION'                                00002
*.....................................................................* 00003
*  MAINTENANCE:                                                       * 00004
*  06/26/86 - CHECK FOR RC=X'0028' + '002C' (40/44) FROM     LMB-CBT  * 00005
*             FROM LOCINDEX (INSUFFICIENT WORKING STORAGE    LMB-CBT  * 00006
*             FOR SVC26).  USE LISTC OR DSAT COMMAND INSTEAD LMB-CBT  * 00007
*  11/03/87 - UPDATED TRACKS USED FOR 3380 K'S               LMN-CBT  * 00008
*  01/03/06 - ADDED SPACE IN GETMAIN, CONVERT TPUT TO PUTLINE    SBG  * 00009
*                                                                     * 00011
*.....................................................................* 00010
*.                                                                   .* 00011
*.   LISTSPC                                                         .* 00012
*.                                                                   .* 00013
*.....................................................................* 00014
*.                                                                   .* 00015
*.   1.0  GENERAL DESCRIPTION                                        .* 00016
*.                                                                   .* 00017
*.   THIS TSO COMMAND IS A MULTI-PURPOSE PROGRAM FOR LISTING         .* 00018
*.   THE SPACE (IN TRACKS) USED BY DATASETS AND THE FREE SPACE       .* 00019
*.   ON DISK VOLUMES.  IT CAN ALSO LIST THE EXTENTS AND VOLSER       .* 00020
*.   OF DATASETS.                                                    .* 00021
*.                                                                   .* 00022
*.....................................................................* 00023
*.                                                                   .* 00024
*.....................................................................* 00025
*.                                                                   .* 00026
*.   2.0  COMMAND SYNTAX                                             .* 00027
*.                                                                   .* 00028
*.    LISTSPC  DATASET(DSNAME-LIST) LEVEL(INDEX-STRUCTURE)           .* 00029
*.             VOLUME(VOLUME-LIST) EXTENTS                           .* 00030
*.                                                                   .* 00031
*.       DATASET(DSNAME-LIST)                                        .* 00032
*.          -  SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO       .* 00033
*.             HAVE THE SPACE INFORMATION LISTED.  TSO DATASET       .* 00034
*.             NAMING CONVENTIONS APPLY FOR THE DSNAMES.             .* 00035
*.                                                                   .* 00036
*.       LEVEL(INDEX-STRUCTURE)                                      .* 00037
*.          -  SPECIFIES AN INDEX STRUCTURE FOR WHICH YOU DESIRE     .* 00038
*.             TO HAVE THE SPACE INFORMATION LISTED FOR EACH         .* 00039
*.             DATASET WITHIN THIS INDEX STRUCTURE.  THIS MAY        .* 00040
*.             BE A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT      .* 00041
*.             AS THE HIGH-LEVEL QUALIFIER OR IT MAY BE AN INDEX     .* 00042
*.             LEVEL.                                                .* 00043
*.                                                                   .* 00044
*.       VOLUME(VOLUME-LIST)                                         .* 00045
*.          -  IF USED WITH THE 'DATASET' PARAMETER, SPECIFIES THE   .* 00046
*.             VOLUME ON WHICH THE DATASET RESIDES.  NO CATALOG      .* 00047
*.             SEARCH WILL BE PERFORMED FOR THE DATASETS.            .* 00048
*.          -  IF USED AS THE ONLY PARAMETER, SPECIFIES A LIST OF    .* 00049
*.             VOLUMES FOR WHICH FREE SPACE INFORMATION WILL BE      .* 00050
*.             LISTED.                                               .* 00051
*.                                                                   .* 00052
*.       EXTENTS                                                     .* 00053
*.          -  SPECIFIES THAT THE VOLSER AND THE DATASET'S EXTENTS   .* 00054
*.             (IN A HEXADECIMAL FORMAT) WILL BE LISTED FOR EACH     .* 00055
*.             DATASET.                                              .* 00056
*.                                                                   .* 00057
*.     NOTE:  THE USE OF THE 'VOLUME' AND THE 'EXTENTS'              .* 00058
*.            PARAMETERS CAN BE RESTRICTED TO CERTAIN USERIDS        .* 00059
*.            THROUGH THE USE OF BIT 0 IN THE FIELD LABELED          .* 00060
*.            'FLAG'.                                                .* 00061
*.                                                                   .* 00062
*.....................................................................* 00063
*.                                                                   .* 00064
*.....................................................................* 00065
*.                                                                   .* 00066
*.   3.0  PROGRAM STRUCTURE                                          .* 00067
*.                                                                   .* 00068
*.                                                                   .* 00069
*.   3.0.1  INITIALIZATION                                           .* 00070
*.                                                                   .* 00071
*.   THIS SECTION BUILDS THE PARAMETER LISTS FOR PARSE AND           .* 00072
*.   LOCINDEX.  IT CAN, IF DESIRED, CHECK THE USERID FOR             .* 00073
*.   AUTHORIZATION AND SET BIT 0 OF THE FLAG FIELD IF THE USER       .* 00074
*.   IS AUTHORIZED.  IT THEN LINKS TO PARSE AND DETERMINES           .* 00075
*.   WHICH TYPE OF REQUEST IS BEING MADE.                            .* 00076
*.                                                                   .* 00077
*.                                                                   .* 00078
*.   3.0.2  DATASET ROUTINE                                          .* 00079
*.                                                                   .* 00080
*.   THIS ROUTINE IS ENTERED IF THE 'DATASET' PARAMETER IS           .* 00081
*.   SPECIFIED.  IF THE 'VOLUME' PARAMETER IS ALSO SPECIFIED,        .* 00082
*.   THE 'LOCATE' IS BYPASSED.  IT THEN LINKS TO THE OBTAIN AND      .* 00083
*.   PRINT ROUTINE.                                                  .* 00084
*.                                                                   .* 00085
*.                                                                   .* 00086
*.   3.0.3  LEVEL ROUTINE                                            .* 00087
*.                                                                   .* 00088
*.   THIS ROUTINE IS ENTERED IF THE 'LEVEL' PARAMETER IS SPECIFIED.  .* 00089
*.   IT LINKS TO LOCINDEX TO GET THE DSNAMES FOR THE INDEX           .* 00090
*.   STRUCTURE AND THEN LINKS TO THE OBTAIN AND PRINT ROUTINE.       .* 00091
*.                                                                   .* 00092
*.                                                                   .* 00093
*.   3.0.4  VOLUME ROUTINE                                           .* 00094
*.                                                                   .* 00095
*.   THIS ROUTINE IS ENTERED IF THE 'VOLUME' PARAMETER IS            .* 00096
*.   SPECIFIED AS THE ONLY PARAMETER.  IT 'OBTAIN'S THE FORMAT 4     .* 00097
*.   DSCB AND EXTRACTS CERTAIN FIELDS.  IT THEN 'OBTAIN'S ALL        .* 00098
*.   OF THE FORMAT 5 DSCB RECORDS AND ACCUMULATES THE FREE           .* 00099
*.   EXTENTS.                                                        .* 00100
*.                                                                   .* 00101
*.                                                                   .* 00102
*.   3.0.5  OBTAIN AND PRINT ROUTINE                                 .* 00103
*.                                                                   .* 00104
*.   THIS ROUTINE 'OBTAIN'S THE FORMAT 1 DSCB AND THE FORMAT 3       .* 00105
*.   DSCB (IF ONE EXISTS) FOR A DATASET AND ACCUMULATES THE          .* 00106
*.   EXTENTS.  IT THEN PRINTS THE DSORG, # OF ALLOCATED TRACKS,      .* 00107
*.   # OF UNUSED TRACKS, # OF EXTENTS, AND THE DSNAME.  IF THE       .* 00108
*.   'EXTENTS' KEYWORD WAS SPECIFIED, IT ALSO PRINTS THE VOLSER      .* 00109
*.   AND THE EXTENTS FOR THE DATASET.                                .* 00110
*.                                                                   .* 00111
*.....................................................................* 00112
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
         TITLE 'LISTSPC - LIST SPACE COMMAND'                           00113
LISTSPC  CSECT                                                          00114
LISTSPC  AMODE 31                                                       00114
LISTSPC  RMODE 24                                                       00114
         STM   R14,R12,12(R13)                                          00115
         USING LISTSPC,R15                                              00116
         ST    R13,SAVE+4                                               00117
         LA    R13,SAVE                                                 00118
         B     BEGIN                                                    00119
SAVE     DC    18F'0'                                                   00120
         DROP  R15                                                      00121
         USING SAVE,R13                                                 00122
         TITLE 'LISTSPC - GETMAIN AND PARSE'                            00123
BEGIN    LR    R4,R1                                                    00124
         USING CPPL,R4                                                  00125
         LA    R0,LWORK            GET LENGTH OF WORK AREA              00126
         A     R0,=F'4096'         GET EXTRA 4K FOR LOCINDEX WORK  SBG  00127
         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1                            00128
         GETMAIN R,LV=(0)                                               00129
         LR    R12,R1               SAVE ADDR OF WORK AREA              00130
         USING WORKAREA,R12                                             00131
         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA         00132
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST              00133
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST           00134
         MVI   WXTNT+4,X'04'                                            00135
         LA    R3,WPPL             GET ADDR OF PPL                      00136
         USING PPL,R3                                                   00137
         L     R0,CPPLCBUF                                              00138
         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER          00139
         L     R0,CPPLUPT                                               00140
         ST    R0,PPLUPT           SAVE ADDR OF UPT                     00141
         L     R0,CPPLPSCB                                              00142
         LR    R10,R0              GET ADDR OF USERID FROM PSCB         00143
         SR    R11,R11                                                  00144
         IC    R11,7(R10)          GET LENGTH OF USERID                 00145
         BCTR  R11,0                                                    00146
*        CLC   0(6,R10),=C'SYSTEM'                           ** VPI **  00147
*        BE    AUTHRZD                                       ** VPI **  00148
*        CLC   0(6,R10),=C'CONSUT'                           ** VPI **  00149
*        BNE   LECT                                          ** VPI **  00150
AUTHRZD  OI    FLAG,X'80'                                               00151
LECT     L     R0,CPPLECT                                               00152
         ST    R0,PPLECT           SAVE ADDR OF ECT                     00153
         LA    R0,CPECB                                                 00154
         ST    R0,PPLECB           SAVE ADDR OF ECB                     00155
         XC    CPECB,CPECB         CLEAR ECB                            00156
         L     R0,=A(PARSLIST)                                          00157
         ST    R0,PPLPCL           SAVE ADDR OF PCL                     00158
         LA    R0,WPDL                                                  00159
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA                00160
         XC    PPLUWA,PPLUWA       CLEAR UWA                            00161
         LR    R1,R3               PASS ADDR OF PPL TO PARSE            00162
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE        00163
         LTR   R15,R15             PARSE ERROR                          00164
         BNZ   RETC                 YES                                 00165
         TM    PPLANS,X'FF'        PARSE ERROR                          00166
         BO    RETC                 YES                                 00167
         DROP  R3,R4                                                    00168
         L     R3,WPDL             GET ADDR OF PDL                      00169
         USING IKJPARMD,R3                                              00170
         TM    EXTENT+1,X'01'      EXTENT SPECIFIED?                    00171
         BZ    *+8                  NO                                  00172
         OI    FLAG,X'20'           YES, SET FLAG BIT                   00173
         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?                   00174
         BO    DSNRTN                YES                                00175
         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?              00176
         BO    LEVEL                 YES                                00177
         TM    VOL+6,X'80'          VOLUME SPECIFIED?                   00178
         BO    FREEA                 YES                                00179
         B     EUSLO                NO PARMS - LISTS FOR USERID         00180
         TITLE 'LISTSPC - DATASET NAME ROUTINE'                         00181
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST                   00182
*        LA    R0,L'MSG1                                                00183
*        LA    R1,MSG1                                                  00184
*        SVC   93                  TPUT HEADING                         00185
         APUT  MSG1,L'MSG1
DSNAME   L     R5,0(R4)             POINT TO DSNAME                     00186
         LH    R6,4(R4)             GET LENGTH OF DSNAME                00187
         BCTR  R6,0                                                     00188
         MVI   DSN1,X'40'                                               00189
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA                  00190
         LA    R8,DSN1              POINT TO DSN WORK AREA              00191
         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?         00192
         BO    MVCDSNAM               YES                               00193
         EX    R11,USIDMVC         MOVE USERID TO WORK AREA             00194
         LA    R8,1(R11,R8)        BUMP PAST USERID                     00195
         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA             00196
         LA    R8,1(0,R8)          BUMP PAST                            00197
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA             00198
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA      00199
         TM    FLAG,X'80'          AUTHORIZED USER?                     00200
         BZ    LOCDSN               NO                                  00201
         TM    VOL+6,X'80'         VOLUME SPECIFIED?                    00202
         BZ    LOCDSN               NO, LOCATE DSN                      00203
         LA    R1,VOLS             POINT TO VOLSER WORK AREA            00204
         L     R5,VOL              POINT TO VOLUME PARAMETER            00205
         LH    R6,VOL+4            GET LENGTH OF VOL PARM               00206
         BCTR  R6,0                                                     00207
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA    00208
         B     BALOBTN             BYPASS LOCATE                        00209
LOCDSN   OI    FLAG,X'10'                                               00210
         LOCATE INDS                                                    00211
         LTR   R15,R15              DID IT FIND VOL SER                 00212
         BNZ   ERR03                 NO WRITE ERROR MSG                 00213
         NI    FLAG,X'EF'                                               00214
         MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER                00215
         SPACE 2                                                        00216
BALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE     00217
RETDSN   L     R4,24(R4)           GET DSN LINK POINTER                 00218
         C     R4,ENDLIST          END OF LIST?                         00219
         BE    RETC                 YES                                 00220
         B     DSNAME               NO, GET NEXT DSNAME                 00221
         TITLE 'LISTSPC - LEVEL ROUTINE'                                00222
EUSLO    EQU   *                                                        00223
**     FOR ENTIRE USERID LOGGED ON                                      00224
         MVC   USERID(7),0(R10)        MOVE IN USERID                   00225
         B     GOTUS               BRANCH TO GOT USERID                 00226
         SPACE 3                                                        00227
LEVEL    EQU   *                                                        00228
         L     R5,LEV              POINT TO INDEX STRUCTURE             00229
         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT           00230
         BCTR  R6,0                                                     00231
         LA    R8,USERID           POINT TO WORK AREA                   00232
         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA    00233
GOTUS    EQU   *                                                        00234
*        LA    R0,L'MSG1                                                00235
*        LA    R1,MSG1                                                  00236
*        SVC   93                  TPUT HEADING                         00237
         APUT  MSG1,L'MSG1
         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID    00238
LOOP     EQU   *                   LOOP FOR DATASET IN USERID           00239
         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)                00240
         LA    R1,PARM             POINT TO PARM LIST                   00241
         BALR  R14,R15             GO TO LOCINDEX                       00242
         L     R14,8(R1)           LOAD PTR TO VOL-SER                  00243
         MVC   VOLID,0(R14)        SAVE THE VOLSER                      00244
         CH    R15,=H'18'          WAS RC=X'0012'?                      00245
         BE    NOTDISK             YES, IT IS TAPE ON MULTI-VOLUMES     00246
         CH    R15,=H'40'          WAS RC=0028?                         00247
         BE    INSUFSTO            YES, THERE WAS INSUFFICIENT STORAGE  00248
         CH    R15,=H'44'          WAS RC=002C?                         00249
         BE    INSUFSTO            YES, THERE WAS INSUFFICIENT STORAGE  00250
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE          00251
         B     OK                  0-GET INFOR FOR DSN & CONT           00252
         B     NOUSER              4-PRINT MSG & RETRUN TO SYS          00253
         B     NOTDISK             8-PRINT MSG&CONTINUE                 00254
         B     MULTIVOL            12-PRINT MSG&CONTINUE                00255
         B     RETC                16-FINISHED-RETURN TO SYS            00256
         B     RDERR               20-PRINT MSG&RETRUN TO SUS           00257
OK       BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE     00258
         B     LOOP                GET NEXT DSNAME FROM LOCINDEX        00259
         SPACE 3                                                        00260
         TITLE 'LISTSPC - VOLUME ROUTINE'                               00261
FREEA    EQU   *                                                        00262
** TO GET AVAILABLE SPACE ON PARTICULAR VOLUME                          00263
         TM    FLAG,X'80'          AUTHORIZED USER?                     00264
         BZ    ERRF                 NO                                  00265
*        LA    R0,L'MSG4                                                00266
*        LA    R1,MSG4                                                  00267
*        SVC   93                  TPUT HEADING                         00268
         APUT  MSG4,L'MSG4
         SPACE 2                                                        00269
         LA    R4,VOL              POINT TO VOLUME LIST                 00270
VOLLOOP  ST    R4,OBTNSAVE         SAVE ADDRESS                         00271
         MVI   MSG2,X'40'                                               00272
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA                   00273
         XC    PEXCTR,PEXCTR       CLEAR EXTENT COUNTER                 00274
         LA    R1,VOLS             POINT TO VOLSER WORK AREA            00275
         L     R5,0(R4)            POINT TO VOLUME PARM                 00276
         LH    R6,4(R4)            GET LENGTH OF VOL PARM               00277
         BCTR  R6,0                                                     00278
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA    00279
         LA    R1,MSG2             POINT TO MESSAGE AREA                00280
         EX    R6,MVCVOLS          MOVE VOLSER TO MESSAGE AREA          00281
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...            00282
         MVC   DSN1+1(43),DSN1     ...INTO DSN1                         00283
         OBTAIN SERCHCAM                                                00284
         CLI   BUF1,X'F4'          DID IT READ OK?                      00285
         BNE   ERRF4               NO                                   00286
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL                  00287
         MVC   VOLDSCTK+1(1),BUF1+30   GET NUM OF DSCBS PER TRK         00288
         MVC   VOLF4CHR(4),BUF1+63 GET CCHH OF START OF VTOC            00289
         MVI   VOLF4CHR+4,X'01'    F4 DSCB IS FIRST REC                 00290
         LH    RCC,VOLF4CHR        SETUP...                             00291
         LH    RHH,VOLF4CHR+2         DISK...                           00292
         SR    RR,RR                     ADDRESSING...                  00293
         IC    RR,VOLF4CHR+4                                            00294
         MVC   WXTNT(4),BUF1+63    MOVE BEGIN XTNT TO WORK AREA         00295
         UNPK  MSG2+29(9),WXTNT(5) UNPACK INTO MESSAGE AREA             00296
         TR    MSG2+29(8),TRTBL    TRANSLATE EXTENT                     00297
         MVC   WXTNT(4),BUF1+67    MOVE END XTNT TO WORK AREA           00298
         UNPK  MSG2+38(9),WXTNT(5) UNPACK INTO MESSAGE AREA             00299
         TR    MSG2+38(8),TRTBL    TRANSLATE EXTENT                     00300
         SR    R9,R9                                                    00301
         LH    R9,BUF1+6             MOVE IN NUMBER FREE DSCB           00302
         CVD   R9,WKD                                                   00303
         MVC   MSG2+6(6),MASKED        MOVE IN MASK                     00304
         ED    MSG2+6(6),WKD+5         EDIT FREE DSCB                   00305
         LH    R1,VOLNO            GET NUM VOLS PROCESSED               00306
         LA    R1,1(R1)            BUMP                                 00307
         STH   R1,VOLNO            REPLACE                              00308
         LA    RR,1(RR)            BUMP RECORD PTR                      00309
         CH    RR,VOLDSCTK         TEST FOR LAST REC ON TRK             00310
         BNH   VBSET               GO SET VTOCCHHR                      00311
         LA    RR,1                RESET RR TO 1                        00312
         LA    RHH,1(RHH)          BUMP TRK COUNTER                     00313
         CH    RHH,VOLTKCYL        PAST END OF CYL?                     00314
         BL    VBSET               GO SET VTOCCHHR                      00315
         SR    RHH,RHH             ELSE SET RHH TO TRK 0                00316
         LA    RCC,1(RCC)          BUMP TO NEXT CYL                     00317
VBSET    STH   RCC,VTOCCHHR        SET...                               00318
         STH   RHH,VTOCCHHR+2         UP...                             00319
         STC   RR,VTOCCHHR+4            VTOCCHHR                        00320
         SR    R4,R4               ZERO COUNTER                         00321
         SPACE 2                                                        00322
PFOBT    OBTAIN SEEKCAM                                                 00323
         LA    R2,1                INDICATE FIRST EXTENT                00324
         LA    R3,BUF1+4           POINT TO FIRST EXTENT                00325
PFLOOP   CLC   0(5,R3),=D'0'       LAST EXTENT?                         00326
         BE    PFGOT               EXIT IF SO                           00327
         MVC   HWK1(2),2(R3)       MOVE NUM CYLS TO HWD                 00328
         LH    R1,HWK1             LOAD                                 00329
         MH    R1,VOLTKCYL         CONVERT TO TRKS                      00330
         SR    R0,R0               ZERO R0                              00331
         IC    R0,4(R3)            LOAD NUM TRKS                        00332
         AR    R1,R0               ADD TRKS                             00333
         AR    R4,R1               ACCUMULATE                           00334
         LA    R2,1(R2)            BUMP CTR                             00335
         CH    R2,=H'9'            NINTH EXTENT?                        00336
         BE    PFXT9               BRANCH IF SO                         00337
         CH    R2,=H'27'           27TH EXTNET?                         00338
         BE    PFXT27              BRANCH IF SO                         00339
         LA    R3,5(R3)            BUMP NORMALLY                        00340
         B     PFLOOP              AND CONTINUE                         00341
PFXT9    LA    R3,6(R3)            SKIP OVER F5 IF AT DSCH+44           00342
         B     PFLOOP              AND CONTINUE                         00343
PFXT27   AH    R2,PEXCTR           ACCUM EXT TOTALS                     00344
         BCTR  R2,0                                                     00345
         STH   R2,PEXCTR           SAVE EXT TOTALS                      00346
         CLC   BUF1+135(5),=D'0'   PTR TO NEXT F5?                      00347
         BE    PFGOT               DONE. NO MORE F5                     00348
         MVC   VTOCCHHR(5),BUF1+135                                     00349
         B     PFOBT               GO READ NEXT F5                      00350
PFGOT    EQU   *                                                        00351
         AH    R2,PEXCTR           ACCUM EXTENT TOTALS                  00352
         CVD   R2,WKD              CONVERT NUM EXTENTS                  00353
         MVC   MSG2+14(4),MASKED     MOVE IN MASK                       00354
         ED    MSG2+14(4),WKD+6      EDIT NUM EXTENTS                   00355
         CVD   R4,WKD              CONVERT NUM TRKS FREE                00356
         MVC   MSG2+21(6),MASKED     MOVE IN MASK                       00357
         ED    MSG2+21(6),WKD+5      EDIT FREE TRKS                     00358
         APUT  MSG2,76             WRITE FREE INFO                      00359
VOLRET   L     R4,OBTNSAVE         LOAD POINTER TO VOLUME LIST          00360
         L     R4,8(R4)            GET LINK POINTER                     00361
         C     R4,ENDLIST          END OF LIST                          00362
         BE    RETC                 YES                                 00363
         B     VOLLOOP              NO, GET NEXT VOLUME                 00364
         TITLE 'LISTSPC - OBTAIN AND PRINT ROUTINES'                    00365
*   READ DSCB1 AND GET SPACE                                            00366
OBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS              00367
         MVC   DSNSAVE(44),DSN1                                         00368
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...            00369
         MVC   DSN1+1(43),DSN1     ...INTO DSN1                         00370
         OBTAIN SERCHCAM                                                00371
         CH    R15,=H'4'           WAS VOLUME MOUNTED?                  00372
         BE    NOTMTD              NO, GO SEND MESSAGE.                 00373
         CLI   BUF1,X'F4'          DID IT READ OK?                      00374
         BNE   ERRF4               NO                                   00375
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL                  00376
         MVC   DSN1(44),DSNSAVE                                         00377
         MVI   MSG2,X'40'                                               00378
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA                   00379
         OBTAIN SERCHCAM                                                00380
         LTR   R15,R15             DID OBTAIN WORK                      00381
         BNZ   ERR03               NO - WRITE ERROR MSG                 00382
         SPACE 2                                                        00383
         CLI   BUF1,C'1'            IS IT F1 DSCB?                      00384
         BNE   ERR01                NOT F1                              00385
         LA    R9,XTNTS            POINT TO EXTENTS SAVE AREA           00386
         LH    R6,BUF1+54          GET LAST RELATIVE TRK USED           00387
         CLI   BUF1+56,X'00'       IS TRK UNUSED?                       00388
         BE    *+8                  YES                                 00389
         LA    R6,1(R6)             NO, ANOTHER TRACK                   00390
         STH   R6,LASTTRK          SAVE LAST REL. TRK                   00391
         MVC   DSORG,BUF1+38       SAVE DSORG                           00392
AROUND   EQU   *                                                        00393
* TEST FOR TYPE OF DSORG AND MOVE TO PRINT LINE                         00394
         CLI   BUF1+38,X'80'        IS IT IS                            00395
         BNE   NIS                  NO                                  00396
         MVC   MSG2+2(2),=C'IS'     YES - MOVE IN IS                    00397
         B     GDSO                 BRANCH TO GOT DSORG                 00398
NIS      CLI   BUF1+38,X'40'        IS IT PS                            00399
         BNE   NPS                   NO                                 00400
         MVC   MSG2+2(2),=C'PS'      YES-MOVE IN PS                     00401
         B     GDSO                 BRANCH TO GOT DSORG                 00402
NPS      CLI   BUF1+38,X'20'        IS IT DA                            00403
         BNE   NDA                   NO                                 00404
         MVC   MSG2+2(2),=C'DA'      YES - MOVE IN DA                   00405
         B     GDSO                 BRANCH TO GOT DSORG                 00406
NDA      CLI   BUF1+38,X'02'        IS IT PO                            00407
         BNE   NPO                   NO                                 00408
         MVC   MSG2+2(2),=C'PO'      YES - MOVE IN PO                   00409
         B     GDSO                 BRANCH TO DSORG                     00410
NPO      CLI   BUF1+38,X'01'        IS IT UNMOVEABLE                    00411
         MVC   MSG2+2(2),=C' U'      YES                                00412
GDSO     SR    R2,R2                ZERO REG 2                          00413
         IC    R2,BUF1+15           PICK UP NUMBER OF EXTENTS           00414
         LA    R3,1                 SET EXTENT COUNTER                  00415
         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION        00416
         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB        00417
         BZ    VVALID               YES, BYPASS ACCUMULATE              00418
         LA    R5,BUF1+61           POINT TO FIRST EXTENT               00419
VXTLOOP  MVC   0(10,R9),0(R5)      MOVE EXTENT TO SAVE AREA             00420
         LA    R9,10(R9)           BUMP TO NEXT SAVE AREA               00421
         MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD                  00422
         LH    R0,HWK1              LOAD                                00423
         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD                  00424
         LH    R1,HWK1              LOAD                                00425
         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD                 00426
         SH    R0,HWK1              SUBTRACT                            00427
         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD                 00428
         SH    R1,HWK1              SUBTRACT                            00429
         MH    R0,VOLTKCYL          CONVERT CYL TO TRK                  00430
         AR    R1,R0                GET TOTAL MINUS1                    00431
         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE            00432
         CR    R3,R2                DONE LAST EXTENT?                   00433
         BE    VVALID               GO TO VVALID IF SO                  00434
         LA    R3,1(R3)             BUMP TO EXTENT COUNTER              00435
         CH    R3,=H'4'             FOURTH EXTENT?                      00436
         BE    VXT4                   BRANCH IF SO                      00437
         CH    R3,=H'8'             EIGHTTH EXTENT?                     00438
         BE   VXT8                                                      00439
         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER            00440
         B     VXTLOOP              AND GO TO NEXT EXTENT               00441
VXT4     MVC   VTOCCHHR(5),BUF1+91  POINT NEXT DSCH(F2 OR F3)           00442
VXT4OBT  OBTAIN SEEKCAM                                                 00443
         CH    R15,=H'4'           WAS VOLUME MOUNTED?                  00444
         BE    NOTMTD              NO, GO SEND MESSAGE.                 00445
         CLI   BUF1+44,C'3'         IF IT F3 DSCB                       00446
         BE    VXT4F3               BRANCH IF SO                        00447
         MVC   VTOCCHHR(5),BUF1+135  ELSE ITS F2-POINT TO F3            00448
         B     VXT4OBT                                                  00449
VXT4F3   LA    R5,BUF1+4            POINT TO FIRST EXTENT IN F3         00450
         B     VXTLOOP              CONTINUE LOOP FOR SIZE              00451
VXT8     LA    R5,BUF1+45           SKIP OVER F3 ID IN F3 DSCB          00452
         B     VXTLOOP              CONTINUE LOOP FOR SIZE              00453
VVALID   EQU   *                                                        00454
* CONVERT SPACE ALLOC AND EDIT IN PRINT LINE                            00455
         CVD   R4,WKD               CONVERT DEC. R4  #TRKS ALLOC        00456
         MVC   MSG2+5(6),MASKED      MOVE MASKED FIELD IN               00457
         ED    MSG2+5(6),WKD+5       EDIT  # TRKS MSG2+5                00458
         TM    DSORG,X'42'        IS IT PO OR PS                        00459
         BNZ   CVDU                  YES - BRANCH                       00460
         MVI   MSG2+17,C'*'                                             00461
         B     CVDX                 BRANCH TO EXTENT CONVERSION         00462
CVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK            00463
         N     R6,=X'0000FFFF'       TURN OFF HIGH ORDER BYTES LMN-CBT  00464
         LR    R7,R4                                                    00465
         SR    R7,R6                 R7 CONTAINS UNUSED SPACE           00466
         CVD   R7,WKD               CONVERT DEC R7                      00467
         MVC   MSG2+12(6),MASKED      MOVE IN MASKED FIELD              00468
         ED    MSG2+12(6),WKD+5       EDIT # TRKD UNUSED                00469
CVDX     CVD   R2,WKD                   PICK UP # EXTENTS               00470
         MVC   MSG2+20(4),MASKED      MOVE IN MASKED FIELD              00471
         ED    MSG2+20(4),WKD+6      EDIT # EXTENTS USED                00472
         MVC   MSG2+27(44),DSN1     MOVE DSN TO PRINT LINE              00473
         APUT  MSG2,76             WRITE OUT LINE                       00474
         TM    FLAG,X'A0'          AUTHORIZED USER?                     00475
         BNO   OBTNRET              NO                                  00476
         LA    R9,XTNTS            POINT TO EXTENT SAVE AREA            00477
         MVC   MSG2(6),VOLS        MOVE VOLSER TO MESSAGE AREA          00478
OUTLOOP  LA    R3,3                SET LOOP CONTROL                     00479
         LA    R4,MSG2+8           POINT TO MESSAGE AREA                00480
         MVI   MSG2+6,X'40'                                             00481
         MVC   MSG2+7(69),MSG2+6   BLANK MESSAGE AREA                   00482
INLOOP   MVC   WXTNT+3(1),1(R9)    MOVE EXTENT # TO WORK AREA           00483
         UNPK  0(2,R4),WXTNT+3(2)  UNPACK EXTENT #                      00484
         TR    0(1,R4),TRTBL       TRANSLATE EXTENT #                   00485
         MVC   WXTNT(4),2(R9)      MOVE BEGIN XTNT TO WORK AREA         00486
         UNPK  2(9,R4),WXTNT(5)    UNPACK XTNT                          00487
         TR    2(8,R4),TRTBL       TRANSLATE EXTENT                     00488
         MVC   WXTNT(4),6(R9)      MOVE END XTNT TO WORK AREA           00489
         UNPK  11(9,R4),WXTNT(5)   UNPACK XTNT                          00490
         TR    11(8,R4),TRTBL      TRANSLATE EXTENT                     00491
         LA    R9,10(R9)           BUMP TO NEXT EXTENT                  00492
         LA    R4,22(R4)           BUMP MESSAGE AREA POINTER            00493
         BCTR  R2,0                DECREASE # EXTENTS                   00494
         LTR   R2,R2               ANY MORE EXTENTS                     00495
         BZ    *+8                  NO                                  00496
         BCT   R3,INLOOP           CONVERT NEXT EXTENT                  00497
*        LA    R0,L'MSG2                                                00498
*        LA    R1,MSG2                                                  00499
*        SVC   93                  TPUT EXTENTS                         00500
         APUT  MSG2,L'MSG2
         MVC   MSG2(6),BLANKS      BLANK VOLSER                         00501
         LTR   R2,R2               ANY MORE EXTENTS?                    00502
         BNZ   OUTLOOP              YES                                 00503
OBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS            00504
         BR    R9                  RETURN TO CALLER                     00505
         TITLE 'LISTSPC - EOJ AND ERROR ROUTINES'                       00506
RETC     EQU   *                                                        00507
         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA         00508
         LM    2,12,28(13)         RELOAD REGISTERS                     00509
         L     14,12(13)           LOAD RETURN ADDRESS                  00510
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG 00511
         BCR   15,14               RETURN TO CALLING PROGRAM            00512
         SPACE 3                                                        00513
ERR01    EQU   *                                                        00514
* NO VALID COMMAND                                                      00515
         APUT  ERMSG1,18                                                00516
         B     RETC                BRANCH TO RETURN CODE                00517
* DATASET NAME NOT FOUND                                                00518
ERR03    MVC   MSG2(L'ERMSG9),ERMSG9                                    00519
         MVC   MSG2+L'ERMSG9(44),DSN1                                   00520
*        LA    R0,L'ERMSG9+44                                           00521
*        LA    R1,MSG2                                                  00522
*        SVC   93                                                       00523
         APUT  MSG2,L'ERMSG9+44
         TM    FLAG,X'40'                                               00524
         BO    LOOP                                                     00525
         TM    FLAG,X'10'                                               00526
         BO    RETDSN                                                   00527
         B     OBTNRET                                                  00528
         SPACE 3                                                        00529
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8                                    00530
         MVC   MSG2+L'ERMSG8(44),DSN1                                   00531
*        LA    R0,L'ERMSG8+44                                           00532
*        LA    R1,MSG2                                                  00533
*        SVC   93                                                       00534
         APUT  MSG2,L'ERMSG8+44
         B     LOOP                CONTINUE THRU LOOP                   00535
         SPACE 3                                                        00536
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3                                    00537
         MVC   MSG2+L'ERMSG3(44),USERID                                 00538
*        LA    R0,L'ERMSG3+44                                           00539
*        LA    R1,MSG2                                                  00540
*        SVC   93                                                       00541
         APUT  MSG2,L'ERMSG3+44
         B     RETC                RETURN TO SYSTEM                     00542
         SPACE 3                                                        00543
INSUFSTO MVC   MSG2(L'ERMSG12),ERMSG12                                  00544
*        LA    R0,L'ERMSG12                                             00545
*        LA    R1,MSG2                                                  00546
*        SVC   93                                                       00547
         APUT  MSG2,L'ERMSG12
         B     RETC                RETURN TO SYSTEM                     00548
NOTDISK  MVC   MSG2(L'ERMSG6),ERMSG6                                    00549
         MVC   MSG2+L'ERMSG6(44),DSN1                                   00550
*        LA    R0,L'ERMSG6+44                                           00551
*        LA    R1,MSG2                                                  00552
*        SVC   93                                                       00553
         APUT  MSG2,L'ERMSG6+44
         B     LOOP                PICK UP NEXT DATASET                 00554
         SPACE 3                                                        00555
MULTIVOL MVC   MSG2(L'ERMSG7),ERMSG7                                    00556
         MVC   MSG2+L'ERMSG7(44),DSN1                                   00557
*        LA    R0,L'ERMSG7+44                                           00558
*        LA    R1,MSG2                                                  00559
*        SVC   93                                                       00560
         APUT  MSG2,L'ERMSG7+44
         B     LOOP                CONTINUE WITH NEXT DSN               00561
         SPACE 3                                                        00562
NOTMTD   MVC   MSG2(L'ERMSG13),ERMSG13                                  00563
         MVC   MSG2+32(44),DSNSAVE                                      00564
         MVC   MSG2+8(6),VOLID                                          00565
*        LA    R0,L'ERMSG13+44                                          00566
*        LA    R1,MSG2                                                  00567
*        SVC   93                                                       00568
         APUT  MSG2,L'ERMSG13+44
         B     LOOP                PICK UP NEXT DATASET                 00569
         SPACE 3                                                        00570
ERRF     EQU   *                                                        00571
         APUT  ERMSG10,20                                               00572
         B     RETC                                                     00573
ERRF4    EQU   *                   ERROR READING F4                     00574
         APUT  ERMSG11,21                                               00575
         B     VOLRET                                                   00576
USIDMVC  MVC   0(0,R8),0(R10)                                           00577
DSNMVC   MVC   0(0,R8),0(R5)                                            00578
MVCVOLS  MVC   0(0,R1),0(R5)                                            00579
         TITLE 'LISTSPC - DATA AREAS'                                   00580
ENDLIST  DS    0F                                                       00581
         DC    XL4'FF000000'                                            00582
* SETUP CONSTANTS                                                       00583
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK                    00584
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB                        00585
VOLNO    DC    H'0'                NUM VOLUMES PROCESSED                00586
PEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE         00587
LASTTRK  DC    H'0'                                                     00588
DSN1     DC    CL44' '              DATASET NAME                        00589
DSNSAVE  DC    CL44' '                                                  00590
VOLS     DC    CL6' '                 VOLUME SER                        00591
USERID   DC    CL44' '              USERID                              00592
VOLID    DC    CL6' '               VOL-SER                             00593
FLAG     DC    X'00'                                                    00594
DSORG    DC    X'00'                                                    00595
BLANKS   DC    CL6' '                                                   00596
BUF1     DS    0D                                                       00597
         DS    265C                                                     00598
TRTBL    EQU   *-240                                                    00599
         DC    C'0123456789ABCDEF'                                      00600
MASKED   DC    XL6'402020202121' EDIT MASK FIELD-SHOW LOW BYTES LMN-CBT 00601
         SPACE 3                                                        00602
* MESSAGE TO BE PRINTED                                                 00603
MSG1     DC    C'DSORG ALLOC UNUSED EXTENTS DSNAME'                     00604
MSG2     DC    CL76' '                                                  00605
MSG4     DC    C'VOLUME DSCBS EXTENTS TRACKS  VTOC'                     00606
         SPACE 3                                                        00607
* ERROR MESSAGES                                                        00608
ERMSG1   DC    C'NO VALID COMMAND'                                      00609
ERMSG3   DC    C'INVALID LEVEL - '                                      00610
ERMSG6   DC    C'DSN NOT ON DISK - '                                    00611
ERMSG7   DC    C'DSN ON MULTIVOLUMES: USE SPACE COMMAND '               00612
ERMSG8   DC    C'ERROR READING CATALOG DSN - '                          00613
ERMSG9   DC    C'DSN NOT FOUND - '                                      00614
ERMSG10  DC    C'UNSUPPORTED KEYWORD'                                   00615
ERMSG11  DC    C'ERROR READING F4 DSCB'                                 00616
ERMSG12  DC    C'INSUFFICIENT STORAGE USE LISTC OR DSAT COMMAND'        00617
ERMSG13  DC    C'VOLUME (XXXXXX) NOT MOUNTED FOR '                      00618
         EJECT                                                          00619
* CAMLST FOR DSCB3                                                      00620
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1                                 00621
         SPACE 2                                                        00622
* CAMLST LOCATE DSN OV VOL SER                                          00623
INDS     CAMLST NAME,DSN1,,BUF1                                         00624
         SPACE 2                                                        00625
* CAMLST FOR DSCB 1                                                     00626
SERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1                                   00627
         EJECT                                                          00628
* CONSTANTS AND WORK AREAS                                              00629
HWK1     DC    H'0'                HALF WORD WORK AREA                  00630
VOLTKCYL DC    H'19'               # TRKS/CYL                           00631
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA                 00632
WKD      DC    D'0'                DOUBLE WORK WORK AREA                00633
         SPACE 3                                                        00634
* PARM SETUP FOR GETDSN                                                 00635
PARM     DC    A(USERID)           USERID ADDRESS                       00636
         DC    A(DSN1)             DSN ADDRESS                          00637
         DC    A(VOLS)             VOL SER ADDRESS                      00638
         DC    A(0)                ADDRESS FOR GETMAIN                  00639
         SPACE 3                                                        00640
* EQUATE REGISTERS                                                      00641
         YREGS                                                          00642
RCC      EQU   R8                                                       00643
RHH      EQU   R7                                                       00644
RR       EQU   R6                                                       00645
         TITLE 'LISTSPC - PARSE PARAMETER LIST'                         00646
PARSLIST IKJPARM                                                        00647
DSNKYD   IKJKEYWD                                                       00648
         IKJNAME 'DATASET',SUBFLD=DSNSUBF                               00649
LEVL     IKJKEYWD                                                       00650
         IKJNAME 'LEVEL',SUBFLD=LVL                                     00651
VOLUME   IKJKEYWD                                                       00652
         IKJNAME 'VOLUME',SUBFLD=VLM                                    00653
EXTENT   IKJKEYWD                                                       00654
         IKJNAME 'EXTENTS'                                              00655
DSNSUBF  IKJSUBF                                                        00656
DSNLIST  IKJPOSIT DSNAME,LIST                                           00657
LVL      IKJSUBF                                                        00658
LEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44                          00659
VLM      IKJSUBF                                                        00660
VOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6 00661
         IKJENDP                                                        00662
         IKJPPL                                                         00663
         IKJCPPL                                                        00664
         TITLE 'LISTSPC - WORK AREA'                                    00665
WORKAREA DSECT                                                          00666
MULTISW  DS    X       SW FOR MULTI-VOLS FROM LOCINDEX  LMB-CBT         00667
WPPL     DS    7A                                                       00668
CPECB    DS    F                                                        00669
WPDL     DS    F                                                        00670
OBTNSAVE DS    10F                                                      00671
XTNTS    DS    16XL10                                                   00672
WXTNT    DS    CL5                                                      00673
         DS    0D                                                       00674
LOCINDXW EQU   *                                                        00675
LWORK    EQU   *-WORKAREA                                               00676
#PAN$AUD CSECT                                                          006764
$PAN#AUD DC    CL21'001CBT501    11/03/87'                              006765
         END                                                            00677
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
