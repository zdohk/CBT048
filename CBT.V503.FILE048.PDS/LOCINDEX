*          DATA SET CBT502     AT LEVEL 001 AS OF 09/08/89
*        LOCINDEX SUBROUTINE REPLACEMENT FOR MVS                        00001
*        THIS ROUTINE SUPPORTS 'LEVEL' OPTIONS OF THE 'LISTS' COMMAND   00002
*             AND IS USED BY OTHER YCC VARIATIONS OF THAT PROGRAM       00003
*        FOLLOWING IS ORIGINAL LOCINDEX DESCRIPTION:                    00004
*.....................................................................* 00005
*.                                                                   .* 00006
*.   LOCINDEX                                                        .* 00007
*.                                                                   .* 00008
*.....................................................................* 00009
*.                                                                   .* 00010
*.   1.0  GENERAL DESCRIPTION                                        .* 00011
*.                                                                   .* 00012
*.   THIS SUBROUTINE IS USED TO RETURN DSNAMES AND THE VOLSER        .* 00013
*.   FOR A SPECIFIED INDEX STRUCTURE.  THE INDEX STRUCTURE CAN BE    .* 00014
*.   SPECIFIED AS SEVERAL HIGH-LEVEL QUALIFIERS OR IT CAN BE A       .* 00015
*.   DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT AS THE HIGH-LEVEL   .* 00016
*.   QUALIFIER.                                                      .* 00017
*.                                                                   .* 00018
*.   MAINTENANCE:                                                    .* 00019
*.   09/07/89 - CHANGE OUTPUT OF SVC 26 TO SKIP PAST THE     LMN-CBT .* 00020
*.              CATALOG NAME ADDED WITH DFP 3.1.0            LMN-CBT .* 00021
*.   04/07/89 - CHANGE VSAM GENERIC LOCATE FOR ICF CTLG WITH LMN-CBT .* 00022
*.              A GDG. SINCE A CATALOGED DATASET STARTS WITH LMN-CBT .* 00023
*.              AN "A" AND A GDG STARTS WITH "B" IN THE      LMN-CBT .* 00024
*.              BUFFER RETURNED FROM SVC 26, I CHECK FOR IT  LMN-CBT .* 00025
*.   03/17/89 - CHANGE VSAM GENERIC LOCATE FOR ICF CATALOG   LMN-CBT .* 00026
*.              IF THERE ARE NO DATASETS, R15 Â¬=8 (IT =0),   LMN-CBT .* 00027
*.              SO I CHECK THE DATASET NAMES PASSED, IF THEY LMN-CBT .* 00028
*.              = X'00' TAKE SAME LOGIC AS IF RC=4.          LMN-CBT .* 00029
*.   06/25/86 - ALLOW RETURN CODES 40 + 44 TO BE PASSED LMB-CBT      .* 00030
*.              ON FROM SVC 26 (INSUFFICIENT STORAGE)   LMB-CBT      .* 00031
*.   08/09/85 - CHGD LH TO IC + SLL DUE TO HIGH ORDER BIT BEING      .* 00032
*.              PROPAGATED                              LMB-CBT      .* 00033
*.   10/19/84 - UPDATED TO SUPPORT MULTI-VOLUME TAPE DATASETS.       .* 00034
*.                                                                   .* 00035
*.....................................................................* 00036
*.                                                                   .* 00037
*.....................................................................* 00038
*.                                                                   .* 00039
*.   2.0  PARAMETER LIST AND RETURN CODE DESCRIPTION                 .* 00040
*.                                                                   .* 00041
*.   THE PARAMETER LIST IS A FOUR OR FIVE WORD LIST CONTAINING THE   .* 00042
*.   FOLLOWING:                                                      .* 00043
*.                                                                   .* 00044
*.    WORD         DESCRIPTION                                       .* 00045
*.                                                                   .* 00046
*.      1          ADDRESS OF THE 44-BYTE FIELD CONTAINING THE       .* 00047
*.                 INDEX STRUCTURE.                                  .* 00048
*.      2          ADDRESS OF THE 44-BYTE FIELD INTO WHICH           .* 00049
*.                 LOCINDEX WILL PLACE THE DSNAME.                   .* 00050
*.      3          ADDRESS OF THE 6-BYTE FIELD INTO WHICH            .* 00051
*.                 LOCINDEX WILL PLACE THE VOLSER OF THE DATASET.    .* 00052
*.      4          ADDRESS OF A 4K WORK AREA TO BE USED BY           .* 00053
*.                 LOCINDEX FOR STORING CATALOG BLOCKS.              .* 00054
*.      5          OPTIONAL FIELD FOR THE ADDRESS OF A FULLWORD      .* 00055
*.                 OF STORAGE ON AN INTEGRAL BOUNDARY INTO WHICH     .* 00056
*.                 LOCINDEX WILL STORE THE RETURN CODE.              .* 00057
*.                                                                   .* 00058
*.   THE HIGH ORDER BIT OF THE LAST WORD OF THE PARAMETER LIST       .* 00059
*.   MUST BE SET ON.                                                 .* 00060
*.                                                                   .* 00061
*.    RETURN CODE  MEANING                                           .* 00062
*.                                                                   .* 00063
*.         0       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .* 00064
*.                 A DISK VOLUME.                                    .* 00065
*.         4       THE INDEX STRUCTURE WAS NOT FOUND.                .* 00066
*.         8       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .* 00067
*.                 A TAPE VOLUME.                                    .* 00068
*.        12       A DSNAME WAS FOUND FOR DASD AND IT IS CATALOGED TO.* 00069
*.                 MULTIPLE VOLUMES.                                 .* 00070
*.        16       THERE ARE NO MORE DATASETS FOR THIS INDEX         .* 00071
*.                 STRUCTURE.                                        .* 00072
*.        18       A DSNAME WAS FOUND FOR TAPE AND IS CATALOGED TO   .* 00073
*.                 MULTIPLE VOLUMES.                        LMB-CBT  .* 00074
*.        20       AN I/O ERROR WAS DETECTED ON THE CATALOG.         .* 00075
*.                                                                   .* 00076
*.....................................................................* 00077
*                                                                       00078
*        THE PRIMARY DIFFERENCES BETWEEN THE MVS VERSION                00079
*        AND THE OS VERSION ARE:                                        00080
*              1) THE PART ABOVE THE ASTERISK IS PASSED TO VSAM         00081
*                 GENERIC LOCATE AND WORKS HOWEVER GENERIC LOCATE       00082
*                 LOCATE WORKS. ONLY NON-VSAM DATASETS ARE PASSED       00083
*                 BACK TO THE CALLER.                                   00084
*              2) THE CHARACTERS BELOW THE ASTERISK MUST APPEAR         00085
*                 IN THE DATASET NAME ANYWHERE AFTER THE SEARCH         00086
*                 KEY CHARACTERS. THEY MAY CONTAIN LEADING              00087
*                 AND TRAILING PARTIAL INDEX LEVELS.                    00088
*              3) THE AMOUNT OF STORAGE REQUIRED FOR A VSAM GENERIC     00089
*                 LOCATE IS MUCH MORE THAN THE 4K AREA PROVIDED BY      00090
*                 THE OS CALLER. A 24K AREA IS GETMAINED AND ITS        00091
*                 ADDRESS IS STORED IN THE FIRST WORK OF THE 4K         00092
*                 CALLER WORK AREA. IT IS FREEMAINED WHEN THE           00093
*                 RETURN CODE OF 16 SIGNALS THE END OF DATASETS         00094
*                 UNDER THIS INDEX.                                     00095
*              5) THE 265 BYTE CAMLIST WORK AREA IS PUT IN THE          00096
*                 CALLER PROVIDED WORK AREA AT OFFSET 4. THIS           00097
*                 ALLOWS ACCESS TO THE COMPLETE VOLUME LIST.            00098
         EJECT                                                          00099
LOCINDEX CSECT                                                          00100
LOCINDEX RMODE 24                                                       00100
LOCINDEX AMODE 31                                                       00100
         USING *,15                                                     00101
         SAVE  (14,12),,*                                               00102
         GETMAIN R,LV=LSECT                                             00103
         ST    R13,4(R1)                                                00104
         ST    R1,8(13)                                                 00105
         LR    R12,R13                                                  00106
         LR    R13,R1                                                   00107
         L     R1,24(R12)                                               00108
         BALR  R12,0                                                    00109
         USING *,12                                                     00110
         USING DSASECT,R13                                              00111
R0       EQU   0                                                        00112
R1       EQU   1                                                        00113
R2       EQU   2                                                        00114
R3       EQU   3                                                        00115
R4       EQU   4                                                        00116
R5       EQU   5                                                        00117
R6       EQU   6                                                        00118
R7       EQU   7                                                        00119
R8       EQU   8                                                        00120
R9       EQU   9                                                        00121
R10      EQU   10                                                       00122
R11      EQU   11                                                       00123
R12      EQU   12                                                       00124
R13      EQU   13                                                       00125
R14      EQU   14                                                       00126
R15      EQU   15                                                       00127
         ST    R1,INPARM                                                00128
         L     R10,12(R1)                                               00129
         USING WORKSECT,R10                                             00130
         L     R2,0(R1)                                                 00131
         CLC   OINDEX,0(R2)   SAME INDEX STRUCTURE AS LAST CALL?        00132
         BE    CAMLOC         GO GET NEXT DATASET                       00133
         MVC   OINDEX,0(R2)                                             00134
         SPACE 10                                                       00135
BLDKEY   DS    0H                                                       00136
*        THIS BLOCK ANALIZES THE NEW INDEX STRUCTURE INTO COMPONENTS    00137
*        IT CONSTRUCTS A VSAM CATALOG GENERIC SEARCH KEY AND AN         00138
*        OPTIONAL LOWER LEVEL QUALIFIER VERIFICATION STRING             00139
*        ONE ASTERISK IS ALLOWED ANYWHERE BELOW THE USERID.             00140
*        IT MAY REPRESENT ALL OR PART OF AN 'INDEX LEVEL'               00141
*        EXITS: NORMAL TO 'GENLOC'                                      00142
*               TO 'ERROR4' IF A SYSTAX ERROR OCCURS IN INDEX STRUCTURE 00143
         SR    R1,R1                                                    00144
         SR    R2,R2          CLEAR FOR TRT INSTRUCTION                 00145
         MVI   TRTAB,0                                                  00146
         MVC   TRTAB+1(255),TRTAB                                       00147
         MVI   TRTAB+C' ',4                                             00148
         MVI   TRTAB+C'*',8                                             00149
         MVI   TRTAB+C'.',12                                            00150
         MVC   KEY,OINDEX     COPY INDEX INPUT                          00151
         TRT   KEY,TRTAB                                                00152
         BZ    ERROR4         MUST BE A BLANK IN 44 CHARS               00153
         B     *(R2)                                                    00154
         B     USERID         C' ' MUST BE A USERID                     00155
         B     ERROR4         C'*' ASTERISK MUST FOLLOW PERIOD          00156
         B     COMPLEX        C'.' MUST DO FULL ANALYSIS OF STRUCTURE   00157
         SPACE 5                                                        00158
USERID   DS    0H                                                       00159
*        THIS BLOCK BUILDS SEARCH KEY FOR USERID. MUST BE <9 CHARACTERS 00160
*        AND WE ADD A PERIOD TO IT TO INDICATE TO GENERIC LOCATE        00161
*        THAT WE ARE INTERESTED IN THE DATASETS UNDER THE NAME AND      00162
*        NOT THE ALIAS RECORD (CVOL POINTER) OF THE NAME ITSELF.        00163
         MVI   0(R1),C'.'                                               00164
         LA    R3,KEY                                                   00165
         SR    R1,R3                                                    00166
         CH    R1,=H'8'                                                 00167
         BH    ERROR4                                                   00168
         LA    R1,1(R1)                                                 00169
         STC   R1,NAME        STORE KEY LENGTH                          00170
         MVI   LREST,X'80'                                              00171
         B     GENLOC                                                   00172
* END OF USERID                                                         00173
         SPACE 5                                                        00174
COMPLEX  DS    0H                                                       00175
*        NOW WE SEARCH FOR AN IMBEDDED ASTERISK IN INDEX STRUCTURE      00176
*        CHARACTERS ABOVE IT ARE USED AS THE GENERIC KEY.               00177
*        CHARACTERS AFTER IT ARE USED AS THE LOWER LEVEL QUALIFIERS.    00178
         MVI   TRTAB+C'.',0   NO LONGER INTERESTED IN PERIODS           00179
         TRT   KEY,TRTAB                                                00180
         BZ    ERROR4                                                   00181
         B     *(R2)                                                    00182
         B     ONEPART        NO ASTERISK                               00183
         B     TWOPART                                                  00184
         SPACE 5                                                        00185
ONEPART  MVI   LREST,X'80'                                              00186
         LA    R3,KEY                                                   00187
         SR    R1,R3                                                    00188
         STH   R1,LKEY                                                  00189
         STC   R1,NAME                                                  00190
         B     GENLOC                                                   00191
         SPACE 5                                                        00192
TWOPART  DS    0H                                                       00193
*        THIS BLOCK HANDLES THE CASE WHERE THERE IS AN EMBEDDED         00194
*        ASTERISK IN THE INDEX LEVEL. THE CHARACTERS BELOW THE          00195
*        ASTERISK ARE MOVED TO 'REST'. THE CHARACTERS FROM THE          00196
*        ASTERISK ON ARE BLANKED IN 'KEY'. THE LENGTH OF THE            00197
*        NON BLANK PART OF 'REST' LESS ONE IS SAVED IN 'LREST'          00198
*        FOR USE IN THE LATER CLC INSTRUCTION. THE LENGTH OF            00199
*        THE KEY IS SAVED IN 'NAME' FOR THE GENERIC LOCATE AND          00200
*        IN 'LKEY' FOR AN INDICATION OF HOW MANY CHARS TO               00201
*        SKIP BEFORE LOOKING IN A DSN FOR A MATCH TO 'REST'.            00202
         LA    R3,KEY+42                                                00203
         SR    R3,R1         GET LENGTH OF KEY ABOVE ASTERISK           00204
         MVC   REST,=CL44' ' INITIALIZE REST                            00205
         EX    R3,MOVREST    MOVE PART BELOW ASTERISK                   00206
         LA    R3,1(R3)                                                 00207
         EX    R3,BLNKEY     BLANK KEY FROM ASTERISK ON                 00208
         SH    R3,=H'43'                                                00209
         LPR   R3,R3         GET CHARS ABOVE ASTERISK                   00210
         STH   R3,LKEY                                                  00211
         STC   R3,NAME                                                  00212
         TRT   REST,TRTAB    FIND NON-BLANK LENGTH OF REST              00213
         B     *(R2)                                                    00214
         B     LENRST                                                   00215
         B     ERROR4        SORRY, ONLY ONE * PER CUSTOMER             00216
LENRST   LA    R3,REST+1     CALCULATE LENGTH FROM ADDRESS              00217
         SR    R1,R3            OF FIRST BLANK                          00218
         STH   R1,LREST                                                 00219
         B     GENLOC                                                   00220
MOVREST  MVC   REST(0),1(R1)                                            00221
BLNKEY   MVC   0(0,R1),=CL44' '                                         00222
* END OF TWOPART                                                        00223
* END OF COMPLEX                                                        00224
* END OF BLDKEY                                                         00225
         EJECT                                                          00226
GENLOC   DS    0H                                                       00227
*        THIS BLOCK ISSUES A VSAM GENERIC LOCATE TO BUILD AN IN-CORE    00228
*        LIST OF DATASETS THAT BEGIN WITH THE SEARCH KEY                00229
*        THERE IS NO GOOD DOCUMENTATION ON THE GENERIC                  00230
*        LOCATE IN THE LITERATURE. SEE THE CATALOG PLM FOR              00231
*        WHAT LITTLE THERE IS. THE FORM BELOW WAS INFERRED              00232
*        FROM SOME FICHE AND BY INTERCEPTING SVC 26 WITH DSS.           00233
*********************************************************************** 00234
*    ********************** S V C  2 6 *******************            * 00235
*       -RETURN CODES 40 AND 44 INDICATE THAT THE WORK AREA IS TOO    * 00236
*        SMALL TO CONTAIN ALL THE DATA SET NAMES, BUT AS MANY NAMES   * 00237
*        AS COULD BE HELD HAVE BEEN RETURNED.                         * 00238
*       -CODE 44 INDICATES THAT SVC 26 COULD NOT DETERMINE THE SIZE   * 00239
*        WORK AREA REQUIRED, SO CONTINUE PROCESSING THE NAMES THAT    * 00240
*        WERE RETURNED.                                               * 00241
*       -CODE 40 INDICATES THAT SVC 26 RETURNED THE REQUIRED WORK     * 00242
*        AREA SIZE IN THE SECOND HALFWORD OF THE WORK AREA.  FREE     * 00243
*        THE ORIGINAL WORK AREA, OBTAIN A NEW WORK AREA OF REQUIRED   * 00244
*        SIZE, AND RE-TRY THE LOCATE REQUEST.                         * 00245
*       -NOTE THAT SVC 26 CONSIDERS A SIZE OF 32,768 (X'8000') OR     * 00246
*        MORE A NEGATIVE SIZE AND WILL NOT RETURN ANY INFORMATION.    * 00247
*        IF MORE THAN 32,767 IS REQUIRED, JUST PROCESS WHAT WAS       * 00248
*        RETURNED.                                                    * 00249
*********************************************************************** 00250
         MVC   GENFLAG,=X'05201100'                                     00251
         XC    GENX1,GENX1                                              00252
         XC    GENX2,GENX2                                              00253
         LA    R1,NAME                                                  00254
         ST    R1,GENNAME                                               00255
         GETMAIN RC,LV=X'400000'    CHANGED FROM X'FFF8'                00256
         ST    R1,GETADDR                                               00257
         ST    R1,GENWORK                                               00258
         MVC   0(4,R1),=X'FFF80004'                                     00259
         LA    R1,GENPARM                                               00260
         SVC   26                                                       00261
         LTR   R15,R15                                                  00262
         BNZ   ERROR4                                                   00263
         L     R1,GETADDR    GET VSAM CATLG RETURN AREA                 00264
         LA    R1,0(R1)       CLEAR HIGH BYTE                           00265
*        LH    R2,2(R1)       GET NUMBER BYTES USED                     00266
         SR    R2,R2          ZERO OUT REG               LMB-CBT        00267
         IC    R2,2(R1)       1ST BYTE (OF # BYTES USED) LMB-CBT        00268
         SLL   R2,8           SHIFT LEFT 8 BITS          LMB-CBT        00269
         IC    R2,3(R1)       2ND BYTE (OF # BYTES USED) LMB-CBT        00270
         AR    R2,R1          ADD START ADDR                            00271
         ST    R2,LAST        SAVE LAST BYTE ADDR                       00272
         LA    R1,49(R1)      SKIP 4 BYTE PREFIX AND FIRST 45 BYTE ENTR 00273
CHECKICF CLI   0(R1),X'00'    IF ZERO NO DATASETS FOUND 3/17/89 LMN-CBT 00274
         BE    ERROR4         SET R15=8 + EOJ           3/17/89 LMN-CBT 00275
         CLI   0(R1),X'F0'    IS IT A CATALOG NAME      9/07/89 LMN-CBT 00276
         BE    FNDCTLG        YES, SKIP AROUND IT       9/07/89 LMN-CBT 00277
         CLI   0(R1),X'C2'    IS IT A GDG               3/17/89 LMN-CBT 00278
         BNE   FOUNDDS        NO, IT IS A TRUE DATASET  3/17/89 LMN-CBT 00279
FNDCTLG  LA    R1,45(R1)      YES, SKIP TO NEXT ENTRY   3/17/89 LMN-CBT 00280
         B     CHECKICF       CONTINUE WITH ICF CTLG CK 3/17/89 LMN-CBG 00281
FOUNDDS  ST    R1,NEXT        SAVE ADDR OF 1ST DSN      3/17/89 LMN-CBT 00282
* END OF GENLOC                                                         00283
         SPACE 10                                                       00284
CAMLOC   DS    0H                                                       00285
*        NOW DO A REGULAR CAMLIST NAME LOCATE FOR THE NEXT NON-VSAM     00286
*        DATASET IN THE INCORE LIST                                     00287
         XC    CAMLST(16),CAMLST                                        00288
         LA    R1,KEY                                                   00289
         ST    R1,CAMLST+4                                              00290
         LA    R1,VOLCNT                                                00291
         ST    R1,CAMLST+12                                             00292
         L     R1,NEXT                                                  00293
TEST     C     R1,LAST                                                  00294
         BNL   RET16          NO MORE DATASETS IN LIST                  00295
         CLI   0(R1),C'A'     IS IT NON-VSAM                            00296
         BE    S1                                                       00297
NOGO     LA    R1,45(R1)                                                00298
         B     TEST                                                     00299
S1       TM    LREST,X'80'    IS THERE A LOWER QUALIFIER                00300
         BO    S2             NO, SO GO LOCATE                          00301
         SPACE 5                                                        00302
TESTQUAL DS    0H                                                       00303
*        THIS CODE LOOKS FOR THE CHARACTER STRING BELOW THE             00304
*        ASTERISK IN THE INDEX SEARCH KEY. THIS STRING MUST             00305
*        BE SOMEWHERE IN THE DATASET NAME BELOW THE KEY OR              00306
*        THE NAME IS REJECTED                                           00307
         LA    R2,1(R1)                                                 00308
         AH    R2,LKEY        SKIP GENERIC KEY CHARS                    00309
         LH    R3,LREST       GET # CHARS-1 IN REST                     00310
         LA    R4,44                                                    00311
         SR    R4,R3                                                    00312
         SH    R4,LKEY        R4=# CHARS BELOW KEY + 1                  00313
COMP     EX    R3,COMPAR                                                00314
         BE    S2                                                       00315
         LA    R2,1(R2)                                                 00316
         BCT   R4,COMP                                                  00317
         B     NOGO                                                     00318
COMPAR   CLC   REST(0),0(R2)                                            00319
* END OF TESTQUAL                                                       00320
         SPACE 5                                                        00321
S2       DS    0H                                                       00322
*        NOW TO ISSUE NORMAL LOCATE BY NAME AND RETURN INFORMATION      00323
*        ACCORDING TO DESCRIPTION OF PARAMETERS IN LEADING DOCUMENT     00324
         MVC   KEY,1(R1)      COPY DSN                                  00325
         LA    R1,45(R1)      PT TO NXT DSN                             00326
         ST    R1,NEXT        SAVE FOR NXT TIME                         00327
         LA    R1,CAMLST                                                00328
         SVC   26             LOCATE BY NAME                            00329
         L     R2,INPARM      NOW GET PASSED PARM LIST                  00330
         LM    R2,R3,4(R2)    PICK UP 2ND & 3RD USER PARMS              00331
         MVC   0(44,R2),KEY   SAVE DSN                                  00332
         MVC   0(6,R3),SER    SAVE VOL                                  00333
         SR    R15,R15        INITIALIZE REG                  LMB-CBT   00334
         TM    DEVT+2,X'20'   IS THIS DISK                              00335
         BZ    CKTAPE         NO, PASS RC=08 OR 12            LMB-CBT   00336
         CLI   VOLCNT+1,1     IS IT MULTI-VOL                           00337
         BE    RC             NO, PASS RC=00 1 VOL-SER DASD   LMB-CBT   00338
         LA    R15,12         YES, PASS RC=12 MULTI-VOL DASD  LMB-CBT   00339
         B     RC                                             LMB-CBT   00340
CKTAPE   CLI   VOLCNT+1,1     IS IT MULTI-VOL                 LMB-CBT   00341
         BE    ERROR8         NO, PASS RC=08 TAPE + 1 VOL-SER LMB-CBT   00342
         LA    R15,18         YES, PASS RC=18 MULTI-VOL TAPE  LMB-CBT   00343
         B     RC                                             LMB-CBT   00344
* END OF CAMLOC                                                         00345
         SPACE 10                                                       00346
*VARIOUS RETURNS                                                        00347
*ERROR4  LA    R15,4                                                    00348
ERROR4   C     R15,=F'44'     IF RC = 44 (X'2C') KEEP IT      LMB-CBT   00349
         BE    ERROR4A                                                  00350
         C     R15,=F'40'     IF RC = 40 (X'28') KEEP IT      LMB-CBT   00351
         BE    ERROR4A                                                  00352
         LA    R15,4          INITIALIZE RC TO 4              LMB-CBT   00353
ERROR4A  B     RC                       KEEP THE RETURN CODE AS IS      00354
ERROR8   LA    R15,8                                                    00355
         B     RC                                                       00356
RET16    FREEMAIN R,LV=X'FFF8',A=GETADDR                                00357
         LA    R15,16                                                   00358
         B     RC                                                       00359
ERROR20  LA    R15,20                                                   00360
RC       L     R1,INPARM                                                00361
         TM    12(R1),X'80'                                             00362
         BO    EXIT                                                     00363
         L     R1,16(R1)                                                00364
         ST    R15,0(R1)                                                00365
EXIT     L     R13,4(R13)                                               00366
         ST    R15,16(R13)                                              00367
         L     R1,8(R13)                                                00368
         FREEMAIN R,LV=LSECT,A=(1)                                      00369
         LM    R14,R12,12(R13)                                          00370
         BR    R14                                                      00371
         EJECT                                                          00372
DSASECT  DSECT                                                          00373
         DS    18A                                                      00374
GENPARM  DS    0F            GENERIC LOCATE PARM AREA                   00375
GENFLAG  DS    F                                                        00376
GENNAME  DS    A                                                        00377
GENX1    DS    A                                                        00378
GENWORK  DS    A                                                        00379
GENX2    DS    3A                                                       00380
KEYLEN   DS    0H                                                       00381
         DS    X                                                        00382
NAME     DS    X                                                        00383
KEY      DS    CL44                                                     00384
INPARM   DS    A             SAVE R1 UPON ENTRY TO LOCINDEX             00385
CAMLST   DS    4A                                                       00386
         DS    0D                                                       00387
DATASW   DS    X             SW IF DATASETS RETURNED  4/7/89 LMN-CBT    00388
         DS    0D                                     4/7/89 LMN-CBT    00389
LSECT    EQU   *-DSASECT                                                00390
         SPACE 10                                                       00391
GETSECT  DSECT               GETMAINED VSAM WORK AREA                   00392
GETLEN   DS    H             LENGT OF AREA                              00393
GETUSED  DS    H             AMOUNT ALLOCATED CURRENTLY TO DATA         00394
GETENTY  DS    0CL45         FIRST ELEMENT OF DSN ARRAY                 00395
GETTYPE  DS    C             TYPE FLAG ('A'=NONVSAM)                    00396
GETNAME  DS    CL44          DSN                                        00397
         SPACE 10                                                       00398
WORKSECT DSECT               WORK AREA PASSED AS PARM                   00399
GETADDR  DS    A             ADDRESS OF GETMAINED VSAM WORK AREA        00400
TRTAB    DS    0CL256                                                   00401
VOLCNT   DS    H                                                        00402
DEVT     DS    XL4                                                      00403
SER      DS    CL6                                                      00404
SEQ      DS    H                                                        00405
         DS    CL251                                                    00406
OINDEX   DS    CL44          PREVIOUS VALUE OF FIRST PARM               00407
REST     DS    CL44          LOW QUALIFIER COMPARE STRING               00408
NEXT     DS    A             ADDRESS OF NEXT DSN IN INCORE TABLE        00409
LAST     DS    A             ADDRESS OF BYTE AFTER END OF DSNLIST       00410
LKEY     DS    H             LENGTH OF GENERIC KEY                      00411
NOREST   DS    0B            FLAG IF 'REST' IS EMPTY                    00412
LREST    DS    H             LENGTH OF REST                             00413
#PAN$AUD CSECT                                                          004134
$PAN#AUD DC    CL21'001CBT502    09/08/89'                              004135
         END                                                            00414
